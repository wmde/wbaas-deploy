#!/usr/bin/env bash

Help()
{
   # Display Help
   echo "Usage: k8s-shell -e <environment> [OPTIONS]"
   echo
   echo "Easily access shells of kubernetes pods in any namespace."
   echo
   echo "Arguments:"
   echo "  -e <environment>  Environment to run in: 'local' or 'staging'"
   echo
   echo "Options:"
   echo "  -l <labels>  Label query (selector) to use to target the pod (comma-separated)"
   echo "               For example '-l key1=value1,key2=value2'"
   echo "               Use 'kubectl get pods --show-labels' to discover available labels"
   echo "  -c <count>   Count of the instance, incase there are multiple [default: 0]"
   echo "  -s <shell>   Shell to run: 'bash' or 'sh' [default: bash]"
   echo "  -h           Show this help message and exit"
   echo
   echo "Examples:"
   echo "  k8s-shell -e local -l app.kubernetes.io/instance=redis,app.kubernetes.io/component=master"
   echo "  k8s-shell -e local -l app.kubernetes.io/instance=sql,app.kubernetes.io/component=primary"
   echo "  k8s-shell -e local -l app.kubernetes.io/name=api,app.kubernetes.io/component=queue"
   echo "  k8s-shell -e local -l app.kubernetes.io/name=api,app.kubernetes.io/component=scheduler"
   echo "  k8s-shell -e local -l app.kubernetes.io/name=elasticsearch,app.kubernetes.io/component=master -c 1"
}

# Set variable defaults
TARGET_COUNT="0"
TARGET_ENVIRONMENT="unset"
TARGET_LABELS=""
TARGET_SHELL="bash"

# Get the options
while getopts ":r:c:e:l:s:h" option; do
   case $option in
      c)
         TARGET_COUNT=$OPTARG;;
      e)
         TARGET_ENVIRONMENT=$OPTARG;;
      l)
         TARGET_LABELS=$OPTARG;;
      s)
         TARGET_SHELL=$OPTARG;;
      h) # display Help
         Help
         exit;;
   esac
done

# Parse user input
K8CONTEXT=$TARGET_ENVIRONMENT
if [ "$TARGET_ENVIRONMENT" = "staging" ]; then
    K8CONTEXT="gke_wikibase-cloud_europe-west3-a_wbaas-2"
fi
if [ "$TARGET_ENVIRONMENT" = "local" ]; then
    K8CONTEXT="minikube-wbaas"
fi

# Make the connection
echo "Targeting environment: $TARGET_ENVIRONMENT. Using k8s context: $K8CONTEXT"
kubectl --context $K8CONTEXT get pods -A -l ${TARGET_LABELS}
PODNAME=$(kubectl --context $K8CONTEXT get pods -A -l ${TARGET_LABELS} -o jsonpath="{.items[$TARGET_COUNT].metadata.name}")
echo "Connecting to pod: $PODNAME with shell: $TARGET_SHELL"
kubectl --context $K8CONTEXT  exec -it $PODNAME -- $TARGET_SHELL
