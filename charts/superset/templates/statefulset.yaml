apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "superset.fullname" . }}
  labels:
    {{- include "superset.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "superset.fullname" . }}
  selector:
    matchLabels:
      {{- include "superset.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "superset.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: SUPERSET_PORT
              value: {{ .Values.service.port | quote }}
            - name: SUPERSET_ENV
              value: production
            - name: SUPERSET_CONFIG_PATH
              value: /app/config.py
            - name: SUPERSET_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName | quote }}
                  key: {{ .Values.secretKeySecretKey | quote }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName | quote }}
                  key: {{ .Values.adminPasswordSecretKey | quote }}
          volumeMounts:
            - name: sqlite
              mountPath: /app/database
            - name: config
              mountPath: /app/entrypoint.sh
              subPath: entrypoint.sh
            - name: config
              mountPath: /app/config.py
              subPath: config.py
          command: ["/app/entrypoint.sh"]
      volumes:
        - name: config
          configMap:
            name: {{ include "superset.fullname" . }}-config
            defaultMode: 0755
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: sqlite
        labels:
          {{- include "superset.labels" . | nindent 10 }}
      spec:
        storageClassName: {{ .Values.storageClass }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.storageSize }}
