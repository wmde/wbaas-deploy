# When listing a BUNCH of stuff in a map, this needed bumping..
map_hash_bucket_size 128;

map $dbversion $mwversion {
        mw1.39-wbs1 139-app;
}

# Figure out which group of backends we might want to send the request to based on uri
# TODO add Special:EntityData???
map $request_uri $mwgroup {
        ~^/()(w/load.php.*) "web";
        ~^/()(w/api.php.*) "api";
        ~^/()(w/rest.php.*) "api";
        default "web";
}

map $request_uri $robots {
default "# robots.txt for http://www.wikipedia.org/ and friends
#
# Please note: There are a lot of pages on this site, and there are
# some misbehaved spiders out there that go _way_ too fast. If you're
# irresponsible, your access to the site may be blocked.
#

# Observed spamming large amounts of https://en.wikipedia.org/?curid=NNNNNN
# and ignoring 429 ratelimit responses, claims to respect robots:
# http://mj12bot.com/
User-agent: MJ12bot
Disallow: /

# advertising-related bots:
User-agent: Mediapartners-Google*
Disallow: /

# Wikipedia work bots:
User-agent: IsraBot
Disallow:

User-agent: Orthogaffe
Disallow:

# Crawlers that are kind enough to obey, but which we'd rather not have
# unless they're feeding search engines.
User-agent: UbiCrawler
Disallow: /

User-agent: DOC
Disallow: /

User-agent: Zao
Disallow: /

# Some bots are known to be trouble, particularly those designed to copy
# entire sites. Please obey robots.txt.
User-agent: sitecheck.internetseer.com
Disallow: /

User-agent: Zealbot
Disallow: /

User-agent: MSIECrawler
Disallow: /

User-agent: SiteSnagger
Disallow: /

User-agent: WebStripper
Disallow: /

User-agent: WebCopier
Disallow: /

User-agent: Fetch
Disallow: /

User-agent: Offline Explorer
Disallow: /

User-agent: Teleport
Disallow: /

User-agent: TeleportPro
Disallow: /

User-agent: WebZIP
Disallow: /

User-agent: linko
Disallow: /

User-agent: HTTrack
Disallow: /

User-agent: Microsoft.URL.Control
Disallow: /

User-agent: Xenu
Disallow: /

User-agent: larbin
Disallow: /

User-agent: libwww
Disallow: /

User-agent: ZyBORG
Disallow: /

User-agent: Download Ninja
Disallow: /

# Misbehaving: requests much too fast:
User-agent: fast
Disallow: /

#
# Sorry, wget in its recursive mode is a frequent problem.
# Please read the man page and use it properly; there is a
# --wait option you can use to set the delay between hits,
# for instance.
#
User-agent: wget
Disallow: /

#
# The 'grub' distributed client has been *very* poorly behaved.
#
User-agent: grub-client
Disallow: /

#
# Doesn't follow robots.txt anyway, but...
#
User-agent: k2spider
Disallow: /

#
# Hits many times per second, not acceptable
# http://www.nameprotect.com/botinfo.html
User-agent: NPBot
Disallow: /

# A capture bot, downloads gazillions of pages with no public benefit
# http://www.webreaper.net/
User-agent: WebReaper
Disallow: /

#
# Friendly, low-speed bots are welcome viewing article pages, but not
# dynamically-generated pages please.
#
# There is a special exception for API mobileview to allow dynamic
# mobile web & app views to load section content.
# These views aren't HTTP-cached but use parser cache aggressively
# and don't expose special: pages etc.
#
# Another exception is for REST API documentation, located at
# /api/rest_v1/?doc.
#
User-agent: *
Allow: /w/api.php?action=mobileview&
Allow: /w/load.php?
Allow: /api/rest_v1/?doc
Disallow: /w/
Disallow: /api/
Disallow: /trap/
Disallow: /wiki/Special:
Disallow: /wiki/Special%3A
Disallow: /wiki/Special:EntityData/
Allow: /wiki/Special:EntityData/*.
Disallow: /wiki/Special:GoToLinkedPage/
Disallow: /wiki/Special:GoToLinkedPage?
Disallow: /wiki/Special:ItemByTitle/
Disallow: /wiki/Special:ItemByTitle?
Disallow: /wiki/Special:SetAliases/
Disallow: /wiki/Special:SetDescription/
Disallow: /wiki/Special:SetLabel/
Disallow: /wiki/Special:SetLabelDescriptionAliases/
Disallow: /wiki/Special:SetSiteLink/
Disallow: /wiki/Special:SetSiteLink?";
}

proxy_cache_path /bitnami/nginx/version_cache levels=1:2 keys_zone=version_cache:10m max_size=50m;

server {
        listen 8080;
        server_name _; # This is just an invalid value which will never trigger on a real hostname.

        # Resolver is needed when using variables in proxy_pass directives...
        # https://serverfault.com/a/937172
        # https://github.com/kubernetes-sigs/aws-load-balancer-controller/issues/795#issuecomment-451257479
        resolver kube-dns.kube-system.svc.cluster.local valid=10s;

        # IP range matches current kubernetes pod IPs
        set_real_ip_from  10.0.0.0/14;
        real_ip_header X-Forwarded-For;
        proxy_set_header X-Forwarded-For "$proxy_add_x_forwarded_for";

        client_max_body_size                    1m;

        port_in_redirect off;

        proxy_set_header Host                   $http_host;

        # mitigate HTTPoxy Vulnerability
        # https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx/
        proxy_set_header Proxy                  "";

        proxy_redirect                          off;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;

        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;

        # In case of errors try the next upstream server before returning an error
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;

        # Custom headers to proxied server
        proxy_connect_timeout                   5s;
        proxy_send_timeout                      60s;
        proxy_read_timeout                      60s;

        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;

        proxy_max_temp_file_size                1024m;

        # Allowoverriding the group decision using the magic header
        if ($http_x_wbstack_alpha) {
                set $mwgroup "alpha";
        }

        ############# Locations #############

        location = /kube-probe {
                add_header Content-Type text/plain;
                return 200 'gangnam style!';
        }

        location = /version {
                internal;
                proxy_buffering on;
                proxy_pass http://api-app-backend.default.svc.cluster.local/backend/ingress/getWikiVersionForDomain?domain=$host;
                proxy_pass_request_body off;
                proxy_set_header Content-Length "";
                proxy_set_header X-Original-URI $request_uri;
                proxy_cache version_cache;
                proxy_cache_key $host;
                proxy_cache_valid any 5m;
                proxy_ignore_headers Cache-Control;
                add_header X-Cache-Status $upstream_cache_status;
	}

        location = /version_error {
                internal;
                default_type text/html;
                return 404 '<body>You have requested the domain: $host. But that wiki can not currently be loaded.<br/>It may never have existed or it might now be deleted.<br/>You can check the platform status at <a href="https://status.wikibase.cloud">status.wikibase.cloud</a>.</body>';
        }

        location = /robots.txt {
                add_header Content-Type text/plain;
                return 200 $robots;
        }

        location ~* "^/(query/)(sparql.*)" {
                ########################################
                # --- START Blazegraph specific stuff ---
                ########################################

                # Make sure the blazegraph service is readonly
                # TODO maybe the headers and the only GET AND POST should mvoe to the gateway?
                proxy_set_header X-BIGDATA-MAX-QUERY-MILLIS 60000;
                proxy_set_header X-BIGDATA-READ-ONLY "yes";
                limit_except GET OPTIONS POST {
                    deny all;
                }

                add_header Access-Control-Allow-Origin * always;

                # Cache on clients for 5 mins
                add_header Cache-Control "public, max-age=300";
                add_header Vary Accept;

                # Proxy result buffering (not even sure if we want this)
                client_body_buffer_size 1m;
                proxy_buffering on;
                proxy_buffer_size 16k;
                proxy_buffers 256 16k;
                proxy_busy_buffers_size 256k;
                proxy_temp_file_write_size 16k;
                proxy_max_temp_file_size 10m;
                proxy_read_timeout 300;

                ########################################
                # --- END Blazegraph specific stuff ---
                ########################################

                rewrite "(?i)/(query/)(sparql.*)" /$2 break;
                proxy_pass http://queryservice-gateway.default.svc.cluster.local:80;

        }

        location ~* "^/(query)(.*)" {
                rewrite ^(/query)$ $1/ permanent;
                rewrite "(?i)/(query)(.*)" /$2 break;
                proxy_pass http://queryservice-ui:80;

        }

        location ~* "^/(tools/widar)(.*)" {
                rewrite ^(/tools/widar)$ $1/ permanent;
                rewrite "(?i)/(tools/widar)(.*)" /$2 break;
                proxy_pass http://tool-widar:80;

        }

        location ~* "^/(tools/cradle)(.*)" {
                rewrite ^(/tools/cradle)$ $1/ permanent;
                rewrite "(?i)/(tools/cradle)(.*)" /$2 break;
                proxy_pass http://tool-cradle:80;

        }

        location ~* "^/(tools/quickstatements)(.*)" {
                rewrite ^(/tools/quickstatements)$ $1/ permanent;
                rewrite "(?i)/(tools/quickstatements)(.*)" /$2 break;
                proxy_pass http://tool-quickstatements:80;
        }

        location ~* "^/()(.*)" {
                auth_request /version;
                error_page 401 = /version_error;
                auth_request_set $dbversion $upstream_http_x_version;
                add_header X-WBSTACK-MW-BACKEND mediawiki-$mwversion-$mwgroup;
                proxy_pass http://mediawiki-$mwversion-$mwgroup.default.svc.cluster.local:80;
                rewrite "(?i)/()(.*)" /$2 break;
        }
}
