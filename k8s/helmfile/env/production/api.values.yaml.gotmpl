image:
  tag: 8x.27.1

replicaCount:
  web: 1
  backend: 2
  scheduler: 1
  queue: 1

useProbes: true

platform:
  backendMwHost: mediawiki-139-app-backend.default.svc.cluster.local

# This mw db connection is only used by the queue..
queue:
  mw:
    db:
      readHost: sql-mariadb-secondary.default.svc.cluster.local
      writeHost: sql-mariadb-primary.default.svc.cluster.local
      # database: someDbName
      username: mediawiki-db-manager
      passwordSecretName: sql-secrets-init-passwords
      passwordSecretKey: SQL_INIT_PASSWORD_MW
  backoff: [10,60,300,900,1500] # 10s, 1m, 5m, 15m, 30m

ingress:
  tls:
  - hosts:
    - wikibase.cloud ## todo should be injected
    secretName: wikibase-production-tls
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  hosts:
  {{- range .Values.services.app.ingressHosts }}
  - host: {{ .host }}
    paths:
    {{- range .paths }}
    - {{ . | quote }}
    {{- end }}
  {{- end }}

wbstack:
  qsBatchMarkFailedAfter: 3
  qsBatchPendingTimeout: 'PT300S'
  signupThrottlingRange: 'PT24H'
  signupThrottlingLimit: 20
  summaryCreationRateRanges:
    - 'PT24H'
    - 'P30D'
  subdomainSuffix: {{ .Values.wbstack.subdomainSuffix }}
  uiurl: {{ .Values.wbstack.uiurl }}
  wikiDbProvisionVersion: mw1.39-wbs1
  wikiDbUseVersion: mw1.39-wbs1
  maxWikisPerUser: 6
  monitoringEmail: "wb-cloud-monitoring@wikimedia.de"
  elasticSearch:
    enabledByDefault: true
  contact:
    mail:
      recipient: contact.wikibase@wikimedia.de
      sender: contact-<subject>@wikibase.cloud

app:
  name: WBaaS Wikibase Production
  env: production
  logLevel: info
  keySecretName: api-app-secrets
  keySecretKey: api-app-key
  url: {{ .Values.services.app.url }}
  cacheDriver: redis
  queueConnection: redis
  jwtSecretSecretName: api-app-secrets
  jwtSecretSecretKey: api-app-jwt-secret
  queryServiceHost: queryservice.default.svc.cluster.local:9999
  elasticSearchHost: elasticsearch-1.default.svc.cluster.local:9200
  redis:
    prefix: wikibase_production_api
    # TODO is it possible to take advantage of replicas here?
    host: {{ .Values.services.redis.writeHost }}
    passwordSecretName: redis-password
    passwordSecretKey: password
    # Default values includes a password right now, so we need to explictly set this as empty
    password:
    port: {{ .Values.services.redis.port }}
    db: {{ .Values.services.redis.databases.apiDb }}
    cachedb: {{ .Values.services.redis.databases.apiCacheDb }}
  db:
    connection: mysql
    readHost: sql-mariadb-secondary.default.svc.cluster.local
    writeHost: sql-mariadb-primary.default.svc.cluster.local
    port: 3306
    name: {{ .Values.services.sql.api.db }}
    user: {{ .Values.services.sql.api.user }}
    passwordSecretName: sql-secrets-init-passwords
    passwordSecretKey: SQL_INIT_PASSWORD_API
  mail:
    mailer: {{ .Values.services.app.mailer }} # mailgun/log https://laravel.com/docs/8.x/mail
    fromaddress: noreply@wikibase.cloud
    fromname: Wikibase Cloud
    smtpUserSecretName: smtp-credentials
    smtpUserSecretKey: username
    smtpPasswordSecretName: smtp-credentials
    smtpPasswordSecretKey: password
    smtphost: smtp.eu.mailgun.org
    smtpport: 587
  recaptcha:
    secretSecretName: {{ .Values.external.recaptcha3.secretName }}
    secretSecretKey: secret_key
    badgehide: true
  gce:
    projectId: {{ .Values.gceProject }}
    serviceAccountSecret: api-serviceaccount
    existingSecret: api-passport-keys
  stackdriver:
    enabled: true
    loggingEnabled: false
    tracingEnabled: false
    errorReportingEnabled: true

trustedProxy:
  proxies: ['10.108.0.0/14']

resources:
  # The backed is a platform critical element, so make sure it is allowed to be a bit silly...
  backend:
    requests:
      cpu: 300m
      memory: 300Mi
    limits:
      cpu: 500m
      memory: 600Mi
  web:
    requests:
      cpu: 100m
      memory: 340Mi
    limits:
      cpu: 250m
      memory: 400Mi
  queue:
    requests:
      cpu: 1m
      memory: 29Mi
    limits:
      cpu: 50m
      memory: 100Mi
  scheduler:
    requests:
      cpu: 5m
      memory: 20Mi
    limits:
      cpu: 40m
      memory: 80Mi
