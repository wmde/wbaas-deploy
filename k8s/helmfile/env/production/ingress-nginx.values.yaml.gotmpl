controller:
  allowSnippetAnnotations: true
  service:
    loadBalancerIP: {{ .Values.ip }}
    externalTrafficPolicy: Local
  resources:
    requests:
      cpu: 0.100
      memory: 150Mi
    limits:
      cpu: null
  config:
    http-snippet: >-
      geo $limit_from_cloud_provider {
        default 0;

        # AL-3; https://networksdb.io/ips-in-network/47.74.0.0/47.87.255.255
        47.74.0.0/24 1;
        47.75.0.0/24 1;
        47.76.0.0/24 1;
        47.77.0.0/24 1;
        47.78.0.0/24 1;
        47.79.0.0/24 1;
        47.80.0.0/24 1;
        47.81.0.0/24 1;
        47.82.0.0/24 1;
        47.83.0.0/24 1;
        47.84.0.0/24 1;
        47.85.0.0/24 1;
        47.86.0.0/24 1;
        47.87.0.0/24 1;
      }

      map $limit_from_cloud_provider $tight_limit_key {
        0 "";
        1 "fromcloud";
      }

      limit_req_zone $tight_limit_key zone=cloud_provider:10m rate=5r/s;
      limit_req zone=cloud_provider burst=20 nodelay;

      limit_req_zone $host zone=limit_host:10m rate=10r/s;
      limit_req zone=limit_host burst=20 delay=10;
      limit_req_zone $binary_remote_addr$host zone=limit_ip_host:10m rate=5r/s;
      limit_req zone=limit_ip_host burst=30 delay=10;
    limit-req-status-code: 429
    limit-conn-status-code: 429
    custom-http-errors: "502,503"
    preserve-trailing-slash: true
    strict-validate-path-type: false
    block-user-agents: ~*Seekport\sCrawler.*,~*MJ12bot.*,~Bytespider,~thesis-research-bot
    # https://stackoverflow.com/a/37877244
    log-format-upstream: >-
      $remote_addr - $remote_user [$time_local] "$request_method $scheme://$host$request_uri $server_protocol"
      $status $body_bytes_sent "$http_referer" "$http_user_agent"
      $request_length $request_time [$proxy_upstream_name] [$proxy_alternative_upstream_name] $upstream_addr
      $upstream_response_length $upstream_response_time $upstream_status $req_id
  metrics:
    enabled: true
    serviceMonitor:
      namespace: monitoring
      enabled: true
      additionalLabels:
        release: kube-prometheus-stack
defaultBackend:
  enabled: true
  image:
    repository: registry.k8s.io/ingress-nginx/nginx-errors
    tag: v20230505
  extraConfigMaps:
    - name: custom-error-pages
      data:
        '502': |
          <!DOCTYPE html>
          <html>
            <head><title>Bad Gateway</title></head>
            <body>
              <h1>Bad Gateway - 502</h1>
              <p>You can check the <a target="_blank" href="https://status.wikibase.cloud">Platform Status</a> if this is unexpected.</p>
            </body>
          </html>
        '503': |
          <!DOCTYPE html>
          <html>
            <body>
            <head><title>Service Unavailable</title></head>
              <h1>Service Unavailable - 503</h1>
              <p>You can check the <a target="_blank" href="https://status.wikibase.cloud">Platform Status</a> if this is unexpected.</p>
            </body>
          </html>
  extraVolumes:
    - name: custom-error-pages
      configMap:
        name: custom-error-pages
        items:
        - key: "502"
          path: "502.html"
        - key: "503"
          path: "503.html"
  extraVolumeMounts:
    - name: custom-error-pages
      mountPath: /www
